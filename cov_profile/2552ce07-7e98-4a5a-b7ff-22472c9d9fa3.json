{
  "scriptId": "72",
  "url": "deno:runtime/js/40_testing.js",
  "functions": [
    {
      "functionName": "assertOps",
      "ranges": [
        {
          "startOffset": 1005,
          "endOffset": 2178,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "asyncOpSanitizer",
      "ranges": [
        {
          "startOffset": 1041,
          "endOffset": 2173,
          "count": 1
        },
        {
          "startOffset": 1137,
          "endOffset": 1146,
          "count": 0
        },
        {
          "startOffset": 1463,
          "endOffset": 2172,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [
        {
          "startOffset": 1418,
          "endOffset": 1453,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "assertResources",
      "ranges": [
        {
          "startOffset": 2382,
          "endOffset": 2900,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "resourceSanitizer",
      "ranges": [
        {
          "startOffset": 2433,
          "endOffset": 2895,
          "count": 1
        },
        {
          "startOffset": 2523,
          "endOffset": 2894,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "assertExit",
      "ranges": [
        {
          "startOffset": 3032,
          "endOffset": 3402,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "exitSanitizer",
      "ranges": [
        {
          "startOffset": 3069,
          "endOffset": 3397,
          "count": 1
        },
        {
          "startOffset": 3294,
          "endOffset": 3303,
          "count": 0
        },
        {
          "startOffset": 3343,
          "endOffset": 3344,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [
        {
          "startOffset": 3123,
          "endOffset": 3259,
          "count": 0
        }
      ],
      "isBlockCoverage": false
    },
    {
      "functionName": "test",
      "ranges": [
        {
          "startOffset": 4070,
          "endOffset": 5252,
          "count": 3
        },
        {
          "startOffset": 4332,
          "endOffset": 4580,
          "count": 0
        },
        {
          "startOffset": 4605,
          "endOffset": 4668,
          "count": 0
        },
        {
          "startOffset": 4688,
          "endOffset": 4758,
          "count": 0
        },
        {
          "startOffset": 4834,
          "endOffset": 4883,
          "count": 1
        },
        {
          "startOffset": 4920,
          "endOffset": 4975,
          "count": 1
        },
        {
          "startOffset": 5007,
          "endOffset": 5057,
          "count": 1
        },
        {
          "startOffset": 5088,
          "endOffset": 5207,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "createTestFilter",
      "ranges": [
        {
          "startOffset": 5256,
          "endOffset": 5733,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [
        {
          "startOffset": 5303,
          "endOffset": 5728,
          "count": 3
        },
        {
          "startOffset": 5332,
          "endOffset": 5702,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "runTest",
      "ranges": [
        {
          "startOffset": 5737,
          "endOffset": 5954,
          "count": 3
        },
        {
          "startOffset": 5794,
          "endOffset": 5825,
          "count": 0
        },
        {
          "startOffset": 5854,
          "endOffset": 5880,
          "count": 2
        },
        {
          "startOffset": 5880,
          "endOffset": 5950,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "getTestOrigin",
      "ranges": [
        {
          "startOffset": 5958,
          "endOffset": 6034,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "reportTestPlan",
      "ranges": [
        {
          "startOffset": 6038,
          "endOffset": 6137,
          "count": 1
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "reportTestConsoleOutput",
      "ranges": [
        {
          "startOffset": 6141,
          "endOffset": 6267,
          "count": 8
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "reportTestWait",
      "ranges": [
        {
          "startOffset": 6271,
          "endOffset": 6376,
          "count": 3
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "reportTestResult",
      "ranges": [
        {
          "startOffset": 6380,
          "endOffset": 6525,
          "count": 3
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "runTests",
      "ranges": [
        {
          "startOffset": 6529,
          "endOffset": 7983,
          "count": 1
        },
        {
          "startOffset": 6888,
          "endOffset": 6894,
          "count": 0
        },
        {
          "startOffset": 7129,
          "endOffset": 7606,
          "count": 0
        },
        {
          "startOffset": 7641,
          "endOffset": 7936,
          "count": 3
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [
        {
          "startOffset": 6800,
          "endOffset": 6819,
          "count": 3
        }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [
        {
          "startOffset": 7222,
          "endOffset": 7431,
          "count": 0
        }
      ],
      "isBlockCoverage": true
    }
  ]
}
